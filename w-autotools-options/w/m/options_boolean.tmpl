#if $data.arg.value == 'true':
variable: ${data.arg.name.upper().replace(" ", '_')}
value: TRUE

file: m4/autotools_disable_${data.arg.name.lower().replace(" ", '_')}.m4
dnl = [begin] ================================================================
dnl [ --disable-${data.arg.name.lower().replace(" ", '-')} ]
dnl The variable ${data.arg.name.upper().replace(" ", '_')} is TRUE
dnl Usage:
dnl * CONVERT TO FALSE
dnl ----------------------------------------they are equivalent
dnl ./configure  --enable-${data.arg.name.lower().replace(" ", '-')}=no
dnl ./configure  --disable-${data.arg.name.lower().replace(" ", '-')}
dnl
dnl * IN C CODE:
dnl \#if ${data.arg.name.upper().replace(" ", '_')}  // <- default: TRUE
dnl     printf ("%s is TRUE\n", "${data.arg.name.lower().replace(" ", '_')}");
dnl \#else // --disable-${data.arg.name.lower().replace(" ", '-')}
dnl        // <- FALSE
dnl     printf ("%s is FALSE\n", "${data.arg.name.lower().replace(" ", '_')}");
dnl \#endif
dnl
dnl     |----------------------+---------------+-------|
dnl     | Command Line         | Variable      | State |
dnl     |----------------------+---------------+-------|
dnl     | ""                   | WITH_${data.arg.name.upper().replace(" ", '_')} | 1     | <- default
dnl     | "--disable-${data.arg.name.lower().replace(" ", '-')}" | WITH_${data.arg.name.upper().replace(" ", '_')} | 0     |
dnl     |----------------------+---------------+-------|
dnl
AC_ARG_ENABLE([${data.arg.name.lower().replace(" ", '-')}],
  [AS_HELP_STRING([--disable-${data.arg.name.lower().replace(" ", '-')}],
    [disable ${data.arg.name} @<:@default: no@:>@])],
  [${data.arg.name.lower().replace(" ", '_')}=\${enableval}], [${data.arg.name.lower().replace(" ", '_')}=yes])

if test "x\${${data.arg.name.lower().replace(" ", '_')}}" = xyes; then
   AC_DEFINE(${data.arg.name.upper().replace(" ", '_')}, 1, [Enable args])
fi
dnl = [end] ==================================================================

file: ${data.name}
dnl = [begin] ================================================================
m4_include([m4/autotools_disable_${data.arg.name.lower().replace(" ", '_')}.m4])

AM_CONDITIONAL([WITH_${data.arg.name.upper().replace(" ", '_')}], [test x\${${data.arg.name.lower().replace(" ", '_')}} = xyes])
dnl = [end] ==================================================================
#else
variable: ${data.arg.name.upper().replace(" ", '_')}
value: FALSE

file: m4/autotools_enable_${data.arg.name.lower().replace(" ", '_')}.m4
dnl = [begin] ================================================================
dnl [ --enable-${data.arg.name.lower().replace(" ", '-')} ]
dnl The variable ${data.arg.name.upper().replace(" ", '_')} is FALSE
dnl Usage:
dnl * CONVERT TO TRUE
dnl ----------------------------------------they are equivalent
dnl ./configure  --enable-${data.arg.name.lower().replace(" ", '-')}
dnl ./configure  --enable-${data.arg.name.lower().replace(" ", '-')}=yes
dnl
dnl * IN C CODE:
dnl \#if ${data.arg.name.upper().replace(" ", '_')}  // --enable-${data.arg.name.lower().replace(" ", '-')}
dnl        // <- TRUE
dnl     printf ("%s is TRUE\n", "${data.arg.name.lower().replace(" ", '_')}");
dnl \#else // <- default: FALSE
dnl     printf ("%s is FALSE\n", "${data.arg.name.lower().replace(" ", '_')}");
dnl \#endif
dnl
dnl     |----------------------+---------------+-------|
dnl     | Command Line         | Variable      | State |
dnl     |----------------------+---------------+-------|
dnl     | ""                   | WITH_${data.arg.name.upper().replace(" ", '_')} | 0     | <- default
dnl     | "--enable-${data.arg.name.lower().replace(" ", '-')}"  | WITH_${data.arg.name.upper().replace(" ", '_')} | 1     |
dnl     |----------------------+---------------+-------|
dnl
AC_ARG_ENABLE([${data.arg.name.lower().replace(" ", '-')}],
  [AS_HELP_STRING([--enable-${data.arg.name.lower().replace(" ", '-')}],
    [Turn on ${data.arg.name.upper().replace(" ", '_')} @<:@default: no@:>@])],
  [case "\${enableval}" in
    yes) ${data.arg.name.lower().replace(" ", '_')}=true ;;
    no)  ${data.arg.name.lower().replace(" ", '_')}=false ;;
    *) AC_MSG_ERROR([bad value \${enableval} for --enable-${data.arg.name.lower().replace(" ", '-')}]) ;;
  esac],
  [${data.arg.name.lower().replace(" ", '_')}=false])

if test "x\${${data.arg.name.lower().replace(" ", '_')}}" = xtrue; then
  AC_DEFINE(${data.arg.name.upper().replace(" ", '_')}, 1, [Turn on ${data.arg.name.upper().replace(" ", '_')}])
fi
dnl = [end] ==================================================================

file: ${data.name}
dnl = [begin] ================================================================
m4_include([m4/autotools_enable_${data.arg.name.lower().replace(" ", '_')}.m4])

AM_CONDITIONAL([WITH_${data.arg.name.upper().replace(" ", '_')}], [test x\$${data.arg.name.lower().replace(" ", '_')} = xtrue])
dnl = [end] ==================================================================


#end if
