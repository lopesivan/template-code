b.module.require opt

b.module.require options
b.module.require config
b.module.require exception
b.module.require exit


function try_again () {
    echo \
    "Ocorreu um erro, verifique o output ou rode os testes para descobrir o erro"
}

# Run!
function run () {

    if ! template.config.load; then
        return 1
    fi

    if [ -n "$1" ]; then

        case x$1 in
        xcommands|xcompletions|xusage)
            b.task.run "$@"
        ;;
        xinit)
            b.task.run "$@"
        ;;
        xtasks)
            echo enable $@:
            b.task.run "commands"
        ;;
        xoptions)
            echo enable $@:
            b.task.run "completions"
        ;;
        ######################################################################
        # BEGIN TASKS ########################################################
        ######################################################################
        xjava)
            b.task.run "$@"
        ;;
        ######################################################################
        # END ################################################################
        ######################################################################
        x*)
            b.task.run "default" "$@"
        ;;
        esac
    else
        b.task.run "usage"
    fi
}

b.try.do run "$@"
b.catch FileNotFoundException template.exception.file_not_found
b.catch StringIsNullException template.exception.string_is_null
#b.finally try_again
b.try.end

# vim: set ts=4 sw=4 tw=78 ft=sh:
